# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  bkstrgrg: 'azDevTFtest01'
  bkstrg: 'csb1003200246fe0a59'
  bkcontainer: 'tfstate'
  bkstrgkey: 'devpipeline.terraform.tfstate'
stages:
  - stage: tfvalidate
    jobs: 
    - job: validate
      continueOnError: false
      steps:
        - task: TerraformInstaller@0
          displayName: tfinstall
          inputs:
            terraformVersion: 'latest'
        - task: TerraformCLI@0
          displayName: init
          inputs:
            command: 'init'
            backendType: 'azurerm'
            backendServiceArm: 'DevServiceConnection'
            backendAzureRmResourceGroupName: '$(bkstrgrg)'
            backendAzureRmStorageAccountName: '$(bkstrg)'
            backendAzureRmContainerName: '$(bkcontainer)'
            backendAzureRmKey: '$(bkstrgkey)'
            allowTelemetryCollection: true
        - task: TerraformCLI@0
          displayName: validate
          inputs:
            command: 'validate'
            allowTelemetryCollection: true
  - stage: tfdeploy
    condition: successded('tfvalidate')
    dependsOn: tfvalidate
    jobs: 
    - job: apply
      steps:
        - task: TerraformInstaller@0
          displayName: tfinstall
          inputs:
            terraformVersion: 'latest'
        - task: TerraformCLI@0
          displayName: init
          inputs:
            command: 'init'
            backendType: 'azurerm'
            backendServiceArm: 'DevServiceConnection'
            backendAzureRmResourceGroupName: '$(bkstrgrg)'
            backendAzureRmStorageAccountName: '$(bkstrg)'
            backendAzureRmContainerName: '$(bkcontainer)'
            backendAzureRmKey: '$(bkstrgkey)'
            allowTelemetryCollection: true
        - task: TerraformCLI@0
          displayName: plan
          inputs:
            command: 'plan'
            environmentServiceName: 'DevServiceConnection'
            allowTelemetryCollection: true
        - task: TerraformCLI@0
          displayName: apply
          inputs:
            command: 'apply'
            environmentServiceName: 'DevServiceConnection'
            allowTelemetryCollection: true